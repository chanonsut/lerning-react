{"ast":null,"code":"var _jsxFileName = \"/Users/chanon_suttana/Documents/6501006-react/src/Todo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [input, setMessage] = useState(\"\");\n  const [todo, setTodo] = useState([]);\n  const handleButtonClick = () => {\n    setTodo([...todo, input]);\n  };\n  const handleRemoveNumber = valueToRemove => {\n    // Use filter to create a new array excluding the specific value to be removed\n    const updatedNumbers = todo.filter(number => number !== valueToRemove);\n    setTodo(updatedNumbers);\n  };\n  const handleButtonDeleteAll = () => {\n    setTodo([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"I am Todo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: input,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick(),\n      children: \" save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonDeleteAll(),\n      children: \" Delete All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todo.map((number, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [number, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveNumber(number),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n_s(Todo, \"EwUpsIUakUQ18O5XK1G91tLFBfw=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todo","_s","input","setMessage","todo","setTodo","handleButtonClick","handleRemoveNumber","valueToRemove","updatedNumbers","filter","number","handleButtonDeleteAll","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","target","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/chanon_suttana/Documents/6501006-react/src/Todo.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react'\nconst Todo: FC = () => {\n\n    const [input, setMessage] = useState(\"\")\n    const [todo, setTodo] = useState<string[]>([]);\n\n    const handleButtonClick = () => { \n        setTodo([...todo, input]);\n    };\n\n    const handleRemoveNumber = (valueToRemove: any) => {\n        // Use filter to create a new array excluding the specific value to be removed\n        const updatedNumbers = todo.filter((number) => number !== valueToRemove);\n        setTodo(updatedNumbers);\n      };\n\n      const handleButtonDeleteAll = () => {\n        setTodo([]);\n      }\n\n\n    return <div>\n        <div>I am Todo.</div>\n        <input type=\"text\" name=\"name\" value={input} onChange={(e) => setMessage(e.target.value)} />\n        <button onClick={() => handleButtonClick()}> save</button>\n        <br />\n        <button onClick={() => handleButtonDeleteAll()}> Delete All</button>\n\n        <ul>\n        {todo.map((number, index) => (\n          <li key={index}>\n            {number}\n            <button onClick={() => handleRemoveNumber(number)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n}\nexport default Todo"],"mappings":";;AAAA,OAAOA,KAAK,IAAmBC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACtD,MAAMC,IAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EAE9C,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC5BD,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEF,KAAK,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMK,kBAAkB,GAAIC,aAAkB,IAAK;IAC/C;IACA,MAAMC,cAAc,GAAGL,IAAI,CAACM,MAAM,CAAEC,MAAM,IAAKA,MAAM,KAAKH,aAAa,CAAC;IACxEH,OAAO,CAACI,cAAc,CAAC;EACzB,CAAC;EAED,MAAMG,qBAAqB,GAAGA,CAAA,KAAM;IAClCP,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAGH,oBAAON,OAAA;IAAAc,QAAA,gBACHd,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAElB,KAAM;MAACmB,QAAQ,EAAGC,CAAC,IAAKnB,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5FlB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAAC,CAAE;MAAAO,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMZ,qBAAqB,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpElB,OAAA;MAAAc,QAAA,EACCT,IAAI,CAACqB,GAAG,CAAC,CAACd,MAAM,EAAEe,KAAK,kBACtB3B,OAAA;QAAAc,QAAA,GACGF,MAAM,eACPZ,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMjB,kBAAkB,CAACI,MAAM,CAAE;UAAAE,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF3DS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AACV,CAAC;AAAAhB,EAAA,CApCKD,IAAQ;AAAA2B,EAAA,GAAR3B,IAAQ;AAqCd,eAAeA,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}