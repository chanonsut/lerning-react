{"ast":null,"code":"var _jsxFileName = \"/Users/chanon_suttana/Documents/6501006-react/src/Todo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [input, setMessage] = useState(\"\");\n  const [todo, setTodo] = useState([]);\n  const handleButtonClick = () => {\n    setTodo([...todo, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [input, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemoveTodo(todo.indexOf(input)),\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 27\n    }, this)]);\n  };\n  const handleRemoveTodo = indexToRemove => {\n    // Create a new array without the item at the specified index\n    const updatedTodo = todo.splice(indexToRemove, 1);\n    // Update the state with the new array)\n    console.log(updatedTodo);\n    setTodo(todo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"I am Todo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: input,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick(),\n      children: \" save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Todo: \", todo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n_s(Todo, \"EwUpsIUakUQ18O5XK1G91tLFBfw=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todo","_s","input","setMessage","todo","setTodo","handleButtonClick","children","onClick","handleRemoveTodo","indexOf","fileName","_jsxFileName","lineNumber","columnNumber","indexToRemove","updatedTodo","splice","console","log","type","name","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/chanon_suttana/Documents/6501006-react/src/Todo.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react'\nconst Todo: FC = () => {\n\n    const [input, setMessage] = useState(\"\")\n    const [todo, setTodo] = useState<any[]>([]);\n    const handleButtonClick = () => {\n\n        setTodo([...todo, <div>\n            {input}<button onClick={() => handleRemoveTodo(todo.indexOf(input))}>remove</button> \n        </div>]);\n\n    };\n\n    const handleRemoveTodo = (indexToRemove: number) => {\n        // Create a new array without the item at the specified index\n        const updatedTodo = todo.splice(indexToRemove, 1);\n        // Update the state with the new array)\n        console.log(updatedTodo);\n        \n        setTodo(todo);\n      };\n\n\n\n    return <div>\n        <div>I am Todo.</div>\n        <input type=\"text\" name=\"name\" value={input} onChange={(e) => setMessage(e.target.value)} />\n        <button onClick={() => handleButtonClick()}> save</button>\n        <p>Todo: {todo}</p>\n    </div>\n}\nexport default Todo"],"mappings":";;AAAA,OAAOA,KAAK,IAAmBC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACtD,MAAMC,IAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAQ,EAAE,CAAC;EAC3C,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAE5BD,OAAO,CAAC,CAAC,GAAGD,IAAI,eAAEL,OAAA;MAAAQ,QAAA,GACbL,KAAK,eAACH,OAAA;QAAQS,OAAO,EAAEA,CAAA,KAAMC,gBAAgB,CAACL,IAAI,CAACM,OAAO,CAACR,KAAK,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,CAAC,CAAC;EAEZ,CAAC;EAED,MAAML,gBAAgB,GAAIM,aAAqB,IAAK;IAChD;IACA,MAAMC,WAAW,GAAGZ,IAAI,CAACa,MAAM,CAACF,aAAa,EAAE,CAAC,CAAC;IACjD;IACAG,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IAExBX,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAIH,oBAAOL,OAAA;IAAAQ,QAAA,gBACHR,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBf,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEpB,KAAM;MAACqB,QAAQ,EAAGC,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5Ff,OAAA;MAAQS,OAAO,EAAEA,CAAA,KAAMF,iBAAiB,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1Df,OAAA;MAAAQ,QAAA,GAAG,QAAM,EAACH,IAAI;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AACV,CAAC;AAAAb,EAAA,CA7BKD,IAAQ;AAAA0B,EAAA,GAAR1B,IAAQ;AA8Bd,eAAeA,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}